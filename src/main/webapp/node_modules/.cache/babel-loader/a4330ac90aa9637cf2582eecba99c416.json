{"ast":null,"code":"var _jsxFileName = \"/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/UploadOrder.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport { postOrder } from \"./OrdersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadOrder() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [file, setFile] = useState(null);\n  const {\n    uploading\n  } = useSelector(state => state.orders);\n  const {\n    order\n  } = useSelector(state => state.orders);\n\n  const handleFileChange = e => setFile(e.target.files[0]);\n\n  const handleFileUpload = () => {\n    const formData = new FormData();\n    formData.append(\"file\", file, file.name);\n    dispatch(postOrder(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please upload spreadsheet: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: uploading ? \"Uploading...\" : order && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Order ID: \", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Order Amount: \", order.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Order created date: \", order.created_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Order Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order_Item_ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sold_Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unit_Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: order.orderItems && order.orderItems.length && order.orderItems.map(({\n              order_item_id,\n              sold_quantity,\n              unit_price\n            }, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order_item_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: sold_quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit_price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UploadOrder, \"8VpYQ1+HVq3bMYYDc8QE31T/7ww=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UploadOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadOrder\");","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/UploadOrder.jsx"],"names":["React","useDispatch","useState","Button","useSelector","postOrder","UploadOrder","dispatch","file","setFile","uploading","state","orders","order","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","name","id","amount","created_date","orderItems","length","map","order_item_id","sold_quantity","unit_price","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport {  useSelector } from \"react-redux\";\nimport { postOrder } from \"./OrdersSlice\";\n\nexport function UploadOrder() {\n    const dispatch = useDispatch();\n    const [file, setFile] = useState(null);\n    const {uploading} = useSelector((state) => state.orders);\n    const {order} = useSelector((state) => state.orders);\n    const handleFileChange = e => setFile(e.target.files[0]);\n    const handleFileUpload = () => {\n        const formData = new FormData();\n        formData.append(\n          \"file\",\n          file,\n          file.name\n        );\n        dispatch(postOrder(formData));\n    };\n\n    return (\n      <div>\n        <div >\n          <h1>Upload Order</h1>\n        </div>\n        <div>\n        <div className=\"divider\"></div>\n          </div>\n        <div>\n            <h3>Please upload spreadsheet: </h3>\n            <div>\n                <input type=\"file\" onChange={handleFileChange} />\n                <Button onClick={handleFileUpload}>\n                  Upload\n                </Button>\n            </div>\n        </div>\n        <div>\n        {uploading ? (\n          \"Uploading...\"\n        ) :(\n            order &&\n          (\n          <div>\n          <div>Order ID: {order.id}</div>\n          <br></br>\n          <div>Order Amount: {order.amount}</div>\n          <br></br>\n          <div>Order created date: {order.created_date}</div>\n          <br></br>\n          <h5>Order Items</h5>\n          <br></br>\n          <table>\n            <thead>\n              <tr>\n                <th>Order_Item_ID</th>\n                <th>Sold_Quantity</th>\n                <th>Unit_Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            {order.orderItems && order.orderItems.length &&\n                order.orderItems.map(({ order_item_id, sold_quantity, unit_price }, i) => (\n                  <tr key={i}>\n                    <td>{order_item_id}</td>\n                    <td>{sold_quantity}</td>\n                    <td>{unit_price}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n          </div>))}\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}