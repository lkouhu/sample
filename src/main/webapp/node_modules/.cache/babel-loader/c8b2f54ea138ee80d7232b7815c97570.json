{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const postOrder = createAsyncThunk(\"orders/postOrder\", async data => {\n  const response = await Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", data, {\n    headers: {\n      \"Content-type\": \"multipart/form-data;boundary=----------287032381131322\"\n    }\n  });\n  const order = await response.json();\n  console.log(order);\n  return order;\n});\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    uploading: false,\n    order: null\n  },\n  reducers: {\n    orderDeleted(state, action) {}\n\n  },\n  extraReducers: {\n    [postOrder.pending]: (state, action) => {\n      state.uploading = true;\n    },\n    [postOrder.fulfilled]: (state, action) => {\n      state.uploading = false;\n      state.order = action.payload;\n    },\n    [postOrder.rejected]: (state, action) => {\n      state.uploading = false;\n    }\n  }\n});\nexport const {\n  orderDeleted\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/OrdersSlice.js"],"names":["createAsyncThunk","createSlice","Axios","postOrder","data","response","post","headers","order","json","console","log","ordersSlice","name","initialState","uploading","reducers","orderDeleted","state","action","extraReducers","pending","fulfilled","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,MAAOI,IAAP,IAAgB;AAC5E,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,8CAAX,EAA2DF,IAA3D,EACvB;AACEG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADX,GADuB,CAAvB;AAOA,QAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAOA,KAAP;AACD,CAXwC,CAAlC;AAaP,MAAMI,WAAW,GAAGX,WAAW,CAAC;AAC9BY,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,KADC;AAEZP,IAAAA,KAAK,EAAE;AAFK,GAFgB;AAM9BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB,CAE3B;;AAHO,GANoB;AAW9BC,EAAAA,aAAa,EAAE;AACb,KAACjB,SAAS,CAACkB,OAAX,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHY;AAIb,KAACZ,SAAS,CAACmB,SAAX,GAAuB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACV,KAAN,GAAcW,MAAM,CAACI,OAArB;AACD,KAPY;AAQb,KAACpB,SAAS,CAACqB,QAAX,GAAsB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACD;AAVY;AAXe,CAAD,CAA/B;AAyBA,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAmBL,WAAW,CAACa,OAArC;AACP,eAAeb,WAAW,CAACc,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const postOrder = createAsyncThunk(\"orders/postOrder\", async (data) => {\n  const response = await Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", data,                \n  {\n    headers: {\n        \"Content-type\": \"multipart/form-data;boundary=----------287032381131322\",\n    },                    \n}\n);\n  const order = await response.json();\n  console.log(order);\n  return order;\n});\n\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    uploading: false,\n    order: null,\n  },\n  reducers: {\n    orderDeleted(state, action) {\n\n    },\n  },\n  extraReducers: {\n    [postOrder.pending]: (state, action) => {\n      state.uploading = true;\n    },\n    [postOrder.fulfilled]: (state, action) => {\n      state.uploading = false;\n      state.order = action.payload;\n    },\n    [postOrder.rejected]: (state, action) => {\n      state.uploading = false;\n    },\n  },\n});\n\nexport const { orderDeleted } = ordersSlice.actions;\nexport default ordersSlice.reducer;"]},"metadata":{},"sourceType":"module"}