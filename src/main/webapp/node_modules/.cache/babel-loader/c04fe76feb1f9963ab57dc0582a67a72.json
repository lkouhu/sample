{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const fetchOrders = createAsyncThunk(\"orders/fetchOrders\", async () => {\n  const response = await fetch(\"http://localhost:8080/api/v1/orders\");\n  const orders = await response.json();\n  return orders;\n});\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    loading: false\n  },\n  reducers: {\n    orderAdded(state, action) {\n      state.entities.push(action.payload);\n      Axios.post(\"http://localhost:8080/api/v1/orders\", action.payload).then(response => {\n        state.loading = true;\n      }).catch(error => {\n        throw error;\n      });\n    }\n\n  },\n  extraReducers: {\n    [fetchOrders.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchOrders.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.entities = [...state.entities, ...action.payload];\n    },\n    [fetchOrders.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  orderAdded\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/OrdersSlice.js"],"names":["createAsyncThunk","createSlice","Axios","fetchOrders","response","fetch","orders","json","ordersSlice","name","initialState","loading","reducers","orderAdded","state","action","entities","push","payload","post","then","catch","error","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AAC5E,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;AACA,QAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,SAAOD,MAAP;AACD,CAJ0C,CAApC;AAMP,MAAME,WAAW,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AADG,GAFgB;AAK9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,MAAM,CAACG,OAA3B;AACAhB,MAAAA,KAAK,CAACiB,IAAN,CAAW,qCAAX,EAAkDJ,MAAM,CAACG,OAAzD,EACCE,IADD,CACMhB,QAAQ,IAAI;AACdU,QAAAA,KAAK,CAACH,OAAN,GAAc,IAAd;AACH,OAHD,EAICU,KAJD,CAIOC,KAAK,IAAI;AACd,cAAMA,KAAN;AACD,OAND;AAOD;;AAVO,GALoB;AAiB9BC,EAAAA,aAAa,EAAE;AACb,KAACpB,WAAW,CAACqB,OAAb,GAAuB,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACR,WAAW,CAACsB,SAAb,GAAyB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACH,OAAN,GAAgB,KAAhB;AACAG,MAAAA,KAAK,CAACE,QAAN,GAAiB,CAAC,GAAGF,KAAK,CAACE,QAAV,EAAoB,GAAGD,MAAM,CAACG,OAA9B,CAAjB;AACD,KAPY;AAQb,KAACf,WAAW,CAACuB,QAAb,GAAwB,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACH,OAAN,GAAgB,KAAhB;AACD;AAVY;AAjBe,CAAD,CAA/B;AA+BA,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAiBL,WAAW,CAACmB,OAAnC;AAEP,eAAenB,WAAW,CAACoB,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const fetchOrders = createAsyncThunk(\"orders/fetchOrders\", async () => {\n  const response = await fetch(\"http://localhost:8080/api/v1/orders\");\n  const orders = await response.json();\n  return orders;\n});\n\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    loading: false,\n  },\n  reducers: {\n    orderAdded(state, action) {\n      state.entities.push(action.payload);\n      Axios.post(\"http://localhost:8080/api/v1/orders\", action.payload)\n      .then(response => {\n          state.loading=true;\n      })\n      .catch(error => {\n        throw(error);\n      });\n    },\n  },\n  extraReducers: {\n    [fetchOrders.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchOrders.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.entities = [...state.entities, ...action.payload];\n    },\n    [fetchOrders.rejected]: (state, action) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { orderAdded } = ordersSlice.actions;\n\nexport default ordersSlice.reducer;"]},"metadata":{},"sourceType":"module"}