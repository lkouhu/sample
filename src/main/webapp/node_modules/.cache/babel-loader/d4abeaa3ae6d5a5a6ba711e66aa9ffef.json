{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const postOrder = createAsyncThunk(\"orders/postOrder\", async data => {\n  const response = await Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", data, {\n    headers: {\n      \"Content-type\": \"multipart/form-data;boundary=----------287032381131322\"\n    }\n  });\n  const order = await response.json();\n  return order;\n});\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    order: null,\n    loading: false\n  },\n  reducers: {},\n  extraReducers: {\n    [postOrder.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [postOrder.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.order = action.payload;\n    },\n    [postOrder.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  orderUploading,\n  orderUploaded\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/OrdersSlice.js"],"names":["createAsyncThunk","createSlice","Axios","postOrder","data","response","post","headers","order","json","ordersSlice","name","initialState","loading","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","orderUploading","orderUploaded","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,MAAOI,IAAP,IAAgB;AAC5E,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,8CAAX,EAA2DF,IAA3D,EACvB;AACEG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADX,GADuB,CAAvB;AAOA,QAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAApB;AACA,SAAOD,KAAP;AACD,CAVwC,CAAlC;AAYP,MAAME,WAAW,GAAGT,WAAW,CAAC;AAC9BU,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZJ,IAAAA,KAAK,EAAE,IADK;AAEZK,IAAAA,OAAO,EAAE;AAFG,GAFgB;AAM9BC,EAAAA,QAAQ,EAAE,EANoB;AAS9BC,EAAAA,aAAa,EAAE;AACb,KAACZ,SAAS,CAACa,OAAX,GAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACV,SAAS,CAACgB,SAAX,GAAuB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACE,OAArB;AACD,KAPY;AAQb,KAACjB,SAAS,CAACkB,QAAX,GAAsB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD;AAVY;AATe,CAAD,CAA/B;AAuBA,OAAO,MAAM;AAAES,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAAoCb,WAAW,CAACc,OAAtD;AAEP,eAAed,WAAW,CAACe,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const postOrder = createAsyncThunk(\"orders/postOrder\", async (data) => {\n  const response = await Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", data,                \n  {\n    headers: {\n        \"Content-type\": \"multipart/form-data;boundary=----------287032381131322\",\n    },                    \n}\n);\n  const order = await response.json();\n  return order;\n});\n\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    order: null,\n    loading: false,\n  },\n  reducers: {\n\n  },\n  extraReducers: {\n    [postOrder.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [postOrder.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.order = action.payload;\n    },\n    [postOrder.rejected]: (state, action) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { orderUploading, orderUploaded } = ordersSlice.actions;\n\nexport default ordersSlice.reducer;"]},"metadata":{},"sourceType":"module"}