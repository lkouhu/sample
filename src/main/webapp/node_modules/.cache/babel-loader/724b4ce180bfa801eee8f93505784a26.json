{"ast":null,"code":"var _jsxFileName = \"/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/UploadOrder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadOrder() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    selectedFile\n  } = useSelector(state => state.selectedFile);\n  const loading = useSelector(state => state.loading);\n  let order = {};\n\n  onFileChange = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    });\n  };\n\n  onFileUpload = () => {\n    const formData = new FormData();\n    formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n    axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", formData).then(response => {\n      this.order = response;\n    }).catch(error => {\n      throw error;\n    });\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please upload spreadsheet: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UploadOrder, \"taa7xP0o/wzErYOaszswrCa7FdI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UploadOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadOrder\");","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/UploadOrder.jsx"],"names":["useDispatch","useSelector","React","UploadOrder","dispatch","selectedFile","state","loading","order","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","axios","post","then","response","catch","error","fileData"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAmBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAApC;AACA,QAAME,OAAO,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEAC,EAAAA,YAAY,GAAGC,KAAK,IAAI;AACpB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,YAAY,EAAEK,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,KAAd;AACH,GAFD;;AAGAC,EAAAA,YAAY,GAAG,MAAM;AACjB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKX,KAAL,CAAWD,YAFb,EAGE,KAAKC,KAAL,CAAWD,YAAX,CAAwBa,IAH1B;AAKAC,IAAAA,KAAK,CAACC,IAAN,CAAW,8CAAX,EAA2DL,QAA3D,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,WAAKd,KAAL,GAAWc,QAAX;AACH,KAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KAND;AAMG;AACJ,GAdH;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKf;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQG,KAAKW,QAAL,EARH;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA7CatB,W;UACKH,W,EAEQC,W,EACTA,W;;;KAJJE,W","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport React from 'react';\n\nexport function UploadOrder() {\n    const dispatch = useDispatch();\n\n    const { selectedFile } = useSelector((state) => state.selectedFile);\n    const loading = useSelector((state) => state.loading);\n    let order = {};\n  \n    onFileChange = event => {\n        this.setState({ selectedFile: event.target.files[0] });\n    };\n    onFileUpload = () => {\n        const formData = new FormData();\n        formData.append(\n          \"myFile\",\n          this.state.selectedFile,\n          this.state.selectedFile.name\n        );\n        axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", formData)      \n        .then(response => {\n            this.order=response;\n        })\n        .catch(error => {\n          throw(error);\n        });;\n      };\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1>Upload Order</h1>\n        </div>\n        <div>\n        <div className=\"divider\"></div>\n          </div>\n        <div className=\"row\">\n            <h3>Please upload spreadsheet: </h3>\n            <div>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload\n                </button>\n            </div>\n          {this.fileData()}\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}