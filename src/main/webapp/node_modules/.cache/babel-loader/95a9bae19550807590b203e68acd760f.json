{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const fetchOrders = createAsyncThunk(\"orders/fetchOrders\", async () => {\n  const response = await fetch(\"http://localhost:8080/api/v1/orders\");\n  const orders = await response.json();\n  return orders;\n});\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    loading: false,\n    order: null\n  },\n  reducers: {\n    orderAdded(state, action) {\n      state.loading = true;\n      Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", action.payload).then(response => {\n        state.loading = false;\n        state.order = response;\n      }).catch(error => {\n        throw error;\n      });\n    }\n\n  } //   extraReducers: {\n  //     [fetchOrders.pending]: (state, action) => {\n  //       state.loading = true;\n  //     },\n  //     [fetchOrders.fulfilled]: (state, action) => {\n  //       state.loading = false;\n  //       state.entities = [...state.entities, ...action.payload];\n  //     },\n  //     [fetchOrders.rejected]: (state, action) => {\n  //       state.loading = false;\n  //     },\n  //   },\n\n});\nexport const {\n  orderAdded\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"sources":["/Users/lingbokou/Documents/sample/src/main/webapp/src/components/orders/OrdersSlice.js"],"names":["createAsyncThunk","createSlice","Axios","fetchOrders","response","fetch","orders","json","ordersSlice","name","initialState","loading","order","reducers","orderAdded","state","action","post","payload","then","catch","error","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AAC5E,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;AACA,QAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,SAAOD,MAAP;AACD,CAJ0C,CAApC;AAMP,MAAME,WAAW,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,KADG;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFgB;AAM9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAT,MAAAA,KAAK,CAACe,IAAN,CAAW,8CAAX,EAA2DD,MAAM,CAACE,OAAlE,EACCC,IADD,CACMf,QAAQ,IAAI;AACdW,QAAAA,KAAK,CAACJ,OAAN,GAAc,KAAd;AACAI,QAAAA,KAAK,CAACH,KAAN,GAAcR,QAAd;AACH,OAJD,EAKCgB,KALD,CAKOC,KAAK,IAAI;AACd,cAAMA,KAAN;AACD,OAPD;AAQD;;AAXO,GANoB,CAmBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9BgC,CAAD,CAA/B;AAiCA,OAAO,MAAM;AAAEP,EAAAA;AAAF,IAAiBN,WAAW,CAACc,OAAnC;AAEP,eAAed,WAAW,CAACe,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from 'axios';\nexport const fetchOrders = createAsyncThunk(\"orders/fetchOrders\", async () => {\n  const response = await fetch(\"http://localhost:8080/api/v1/orders\");\n  const orders = await response.json();\n  return orders;\n});\n\nconst ordersSlice = createSlice({\n  name: \"orders\",\n  initialState: {\n    loading: false,\n    order: null,\n  },\n  reducers: {\n    orderAdded(state, action) {\n      state.loading=true\n      Axios.post(\"http://localhost:8080/api/v1/uploadOrderFile\", action.payload)\n      .then(response => {\n          state.loading=false;\n          state.order = response;\n      })\n      .catch(error => {\n        throw(error);\n      });\n    },\n  },\n//   extraReducers: {\n//     [fetchOrders.pending]: (state, action) => {\n//       state.loading = true;\n//     },\n//     [fetchOrders.fulfilled]: (state, action) => {\n//       state.loading = false;\n//       state.entities = [...state.entities, ...action.payload];\n//     },\n//     [fetchOrders.rejected]: (state, action) => {\n//       state.loading = false;\n//     },\n//   },\n});\n\nexport const { orderAdded } = ordersSlice.actions;\n\nexport default ordersSlice.reducer;"]},"metadata":{},"sourceType":"module"}